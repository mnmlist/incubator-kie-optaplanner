<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>37</version>
        <relativePath/>
    </parent>

    <groupId>org.optaplanner</groupId>
    <artifactId>optaplanner-parent</artifactId>
    <packaging>pom</packaging>
    <version>8.8.0.Final-v1</version>

    <name>OptaPlanner multiproject parent</name>
    <description>
        OptaPlanner solves planning problems.
        This lightweight, embeddable planning engine implements powerful and scalable algorithms
        to optimize business resource scheduling and planning.

        This module is just the multiproject parent. The planning engine itself is in optaplanner-core.
    </description>
    <url>https://www.optaplanner.org</url>
    <inceptionYear>2006</inceptionYear>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>optaplanner-core</module>
        <module>optaplanner-persistence</module>
        <module>optaplanner-benchmark</module>
        <module>optaplanner-test</module>
        <module>optaplanner-spring-integration</module>
        <module>optaplanner-examples</module>
<!--        <module>optaplanner-bom</module>-->
    </modules>

    <properties>
        <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>

        <!-- ************************************************************************ -->
        <!-- Dependencies -->
        <!-- ************************************************************************ -->
        <!-- SNAPSHOT and KIE dependency versions -->
        <version.org.kie.kogito>1.8.0.Final</version.org.kie.kogito>

        <!-- Normal dependency versions -->
        <!-- TODO Do we want import the quarkus-bom instead of defining these ourselves? -->
        <version.ch.qos.logback>1.2.3</version.ch.qos.logback>
        <version.commons-io>2.8.0</version.commons-io>
        <version.com.fasterxml.jackson.core>2.12.3</version.com.fasterxml.jackson.core>
        <version.com.h2database>1.4.197</version.com.h2database>
        <version.com.thoughtworks.xstream>1.4.17</version.com.thoughtworks.xstream>
        <version.io.micrometer>1.6.6</version.io.micrometer>
        <version.io.quarkus>2.0.0.Final</version.io.quarkus>
        <version.io.quarkus.gizmo>1.0.9.Final</version.io.quarkus.gizmo>
        <version.org.ow2.asm>9.1</version.org.ow2.asm>
        <version.jakarta.json.bind>1.0.2</version.jakarta.json.bind>
        <version.jakarta.xml.bind>2.3.3</version.jakarta.xml.bind>
        <version.org.apache.commons.lang3>3.12.0</version.org.apache.commons.lang3>
        <version.org.apache.commons.math3>3.6.1</version.org.apache.commons.math3>
        <version.org.apache.poi>4.1.2</version.org.apache.poi>
        <version.org.assertj>3.19.0</version.org.assertj>
        <version.org.freemarker>2.3.31</version.org.freemarker>
        <version.org.hibernate>5.5.3.Final</version.org.hibernate>
        <version.org.jboss.jandex>2.3.0.Final</version.org.jboss.jandex>
        <version.org.jdom>1.1.3</version.org.jdom>
        <version.org.jfree.jfreechart>1.5.3</version.org.jfree.jfreechart>
        <version.org.junit>5.7.1</version.org.junit>
        <version.org.mockito>3.10.0</version.org.mockito>
        <version.org.postgresql>42.2.22</version.org.postgresql>
        <version.org.slf4j>1.7.30</version.org.slf4j>
        <version.org.springframework>5.3.6</version.org.springframework>
        <version.org.springframework.boot>2.4.5</version.org.springframework.boot>

        <!-- ************************************************************************ -->
        <!-- Plugins -->
        <!-- ************************************************************************ -->

        <maven.min.version>3.6.2</maven.min.version>
        <!-- An upcoming minor 8.x release will change this to 11 because the 8.x series require Java 11 or higher. -->
        <!--    <maven.compiler.release>8</maven.compiler.release>-->
        <!-- jboss suffixed version from jboss-parent which cannot be downloaded due to SNAPSHOT only policy for plugins from JBoss -->
        <version.compiler.plugin>3.9.0</version.compiler.plugin>
        <!-- The first version that supports analysis of classes compiled by Java 11. -->
        <version.dependency.plugin>3.1.2</version.dependency.plugin>
        <version.surefire.plugin>2.22.2</version.surefire.plugin>
        <!-- Versions plugin should stay on version 2.5
          until https://github.com/mojohaus/versions-maven-plugin/issues/312 is fixed -->
        <version.versions.plugin>2.5</version.versions.plugin>
        <!-- This property needs to be defined in all modules that use the packaging 'jar'.
             It is used by different plugins to make sure the module/bundle names are consistent. -->
        <java.module.name/>
        <formatter.skip>false</formatter.skip>
        <formatter.goal>format</formatter.goal>
        <!-- Jacoco plugin configurations -->
        <version.jacoco.plugin>0.8.5</version.jacoco.plugin>
        <!-- JaCoCo coverage data file location -->
        <jacoco.exec.file>${project.root.dir}/target/jacoco.exec</jacoco.exec.file>
        <jacoco.agent.argLine/>
        <!--    <enforcer.failOnDuplicatedClasses>true</enforcer.failOnDuplicatedClasses>-->
        <!-- Latest release to be used by api-compatibility-check to check backwards compatibility of the API. -->
        <revapi.oldOptaplannerVersion>8.5.0.Final</revapi.oldOptaplannerVersion>
        <!--suppress UnresolvedMavenProperty-->
        <project.root.dir>${maven.multiModuleProjectDirectory}</project.root.dir>

        <schema.filename.benchmark>benchmark-with-import.xsd</schema.filename.benchmark>
        <schema.filename.solver>solver.xsd</schema.filename.solver>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SNAPSHOT and KIE dependencies -->
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-core</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-core</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-core</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-core</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-common</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-common</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-common</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-common</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-xstream</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-xstream</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-xstream</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-xstream</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jaxb</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jaxb</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jaxb</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jaxb</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jackson</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jackson</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jackson</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jackson</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jsonb</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jsonb</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jsonb</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jsonb</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jpa</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jpa</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jpa</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-persistence-jpa</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-benchmark</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-benchmark</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-benchmark</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-benchmark</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-test</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-test</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-test</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-test</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-examples</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-examples</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-examples</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <!-- spring-integration -->
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-spring-boot-autoconfigure</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-spring-boot-autoconfigure</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-spring-boot-autoconfigure</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-spring-boot-starter</artifactId>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-spring-boot-starter</artifactId>
                <version>8.8.0.Final-v1</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>org.optaplanner</groupId>
                <artifactId>optaplanner-spring-boot-starter</artifactId>
                <type>test-jar</type>
                <version>8.8.0.Final-v1</version>
            </dependency>
            <dependency>
                <groupId>io.quarkus.gizmo</groupId>
                <artifactId>gizmo</artifactId>
                <version>${version.io.quarkus.gizmo}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jandex</artifactId>
                <version>${version.org.jboss.jandex}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>kogito-api</artifactId>
                <version>${version.org.kie.kogito}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.kie</groupId>
                        <artifactId>kie-dmn-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.kie.kogito</groupId>
                        <artifactId>kogito-timer</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.kie.kogito</groupId>
                        <artifactId>kogito-pmml-api-dependencies</artifactId>
                    </exclusion>
                    <exclusion>
                        <!-- TODO remove jackson exclusion after fix https://issues.redhat.com/browse/KOGITO-3794 -->
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>kogito-kie7-bom</artifactId>
                <version>${version.org.kie.kogito}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>drools-core</artifactId>
                <version>${version.org.kie.kogito}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.kie.kogito</groupId>
                        <artifactId>kogito-timer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>drools-compiler</artifactId>
                <version>${version.org.kie.kogito}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>kogito-drools-model</artifactId>
                <version>${version.org.kie.kogito}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>kogito-quarkus-rules</artifactId>
                <version>${version.org.kie.kogito}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>kogito-quarkus-rules-deployment</artifactId>
                <version>${version.org.kie.kogito}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.kogito</groupId>
                <artifactId>drools-core-dynamic</artifactId>
                <version>${version.org.kie.kogito}</version>
            </dependency>

            <!-- Normal dependencies versions-->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-bom</artifactId>
                <version>${version.io.micrometer}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${version.ch.qos.logback}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${version.ch.qos.logback}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${version.commons-io}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${version.com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${version.com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.com.h2database}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${version.com.thoughtworks.xstream}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.json.bind</groupId>
                <artifactId>jakarta.json.bind-api</artifactId>
                <version>${version.jakarta.json.bind}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${version.jakarta.xml.bind}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.org.apache.commons.lang3}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${version.org.apache.commons.math3}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${version.org.apache.poi}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${version.org.apache.poi}</version>
                <exclusions>
                    <exclusion>
                        <!-- Collides with 'javax.xml.stream:stax-api' brought in by 'org.drools:drools-decisiontables'. -->
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.glassfish</groupId>
                        <artifactId>javax.json</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.org.assertj}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${version.org.freemarker}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <!-- Keep the version of the API and the impl in sync. -->
                <version>${version.jakarta.xml.bind}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${version.org.hibernate}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${version.org.hibernate}</version>
            </dependency>
            <dependency>
                <groupId>org.jdom</groupId>
                <artifactId>jdom</artifactId>
                <version>${version.org.jdom}</version>
            </dependency>
            <dependency>
                <groupId>org.jfree</groupId>
                <artifactId>jfreechart</artifactId>
                <version>${version.org.jfree.jfreechart}</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.org.junit}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${version.org.mockito}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>${version.org.ow2.asm}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.org.postgresql}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.org.slf4j}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${version.org.springframework}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${version.org.springframework}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${version.org.springframework}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${version.org.springframework.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure-processor</artifactId>
                <version>${version.org.springframework.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${version.org.springframework.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-test</artifactId>
                <version>${version.org.springframework.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-test-autoconfigure</artifactId>
                <version>${version.org.springframework.boot}</version>
            </dependency>

            <!-- TODO Dependencies that must use a jakarta.* groupId instead in 8 https://issues.redhat.com/browse/PLANNER-2262 -->
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>javax.persistence-api</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.json</artifactId>
                <version>1.1.6</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <!-- Old version until this issue is resolved: https://github.com/ImmobilienScout24/illegal-transitive-dependency-check/issues/30 -->
                <version>1.0.4</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec.javax.transaction</groupId>
                <artifactId>jboss-transaction-api_1.2_spec</artifactId>
                <version>1.1.1.Final</version>
            </dependency>

            <!-- TODO Dependencies that should maybe be removed/replaced in 8 https://issues.redhat.com/browse/PLANNER-2262 -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>2.7.6</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.narayana.jta</groupId>
                <artifactId>narayana-jta</artifactId>
                <version>5.11.2.Final</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse</groupId>
                <artifactId>yasson</artifactId>
                <version>1.0.9</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.revapi</groupId>
                    <artifactId>revapi-maven-plugin</artifactId>
                    <version>0.9.5</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.revapi</groupId>
                            <artifactId>revapi-java</artifactId>
                            <version>0.14.3</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <checkDependencies>false</checkDependencies>
                        <oldArtifacts>
                            <artifact>${project.groupId}:${project.artifactId}:${revapi.oldOptaplannerVersion}</artifact>
                        </oldArtifacts>
                        <newArtifacts>
                            <artifact>${project.groupId}:${project.artifactId}:${project.version}</artifact>
                        </newArtifacts>
                        <!-- By default revapi will check the oldArtifact against the currently executed build -->
                        <analysisConfigurationFiles>
                            <configurationFile>
                                <path>src/build/revapi-config.json</path>
                                <roots>
                                    <root>filters</root>
                                    <root>ignores</root>
                                </roots>
                            </configurationFile>
                        </analysisConfigurationFiles>
                        <failSeverity>potentiallyBreaking</failSeverity>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <!-- Packaging -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>default-jar</id>
                            <configuration>
                                <archive>
                                    <manifestEntries combine.children="append">
                                        <Automatic-Module-Name>${java.module.name}</Automatic-Module-Name>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-jar</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                            <configuration>
                                <skipIfEmpty>true</skipIfEmpty>
                                <excludes>
                                    <exclude>**/logback-test.xml</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                        <excludes>
                            <!-- Remove unnecessary metadata generated by the jaxb2-maven-plugin. -->
                            <exclude>META-INF/JAXB/</exclude>
                            <!-- Remove the intermediate benchmark XSD that is later merged with the solver XSD. -->
                            <exclude>${schema.filename.benchmark}</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <!-- The JAXB nor XSD artifacts should not appear in the sources JAR either (see the maven-jar-plugin). -->
                            <exclude>META-INF/JAXB/</exclude>
                            <exclude>${schema.filename.benchmark}</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <dependencies>
                        <dependency>
                            <!-- Required to generate the PDF file -->
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-pdf</artifactId>
                            <version>1.5.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${version.versions.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <author>false</author>
                        <failOnError>true</failOnError>
                        <quiet>true</quiet>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <compilerArgs>
                            <!-- Visit https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html
                                 to learn more about javac warnings -->
                            <arg>-Xmaxwarns</arg>
                            <arg>100</arg>
                            <arg>-Xlint</arg>
                            <arg>-Xlint:-rawtypes</arg>
                            <arg>-Xlint:-serial</arg>
                            <arg>-Xlint:-unchecked</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco.plugin}</version>
                    <executions>
                        <execution>
                            <id>jacoco-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <append>true</append>
                                <destFile>${jacoco.exec.file}</destFile>
                                <excludes>
                                    <!-- Instrumentation of classes generated by antlr fails due to exceeding method size limit. -->
                                    <exclude>*Lexer</exclude>
                                    <!--
                                      JaCoCo adds a field to every class and as a result tests checking fields on test data classes fail.
                                    -->
                                    <exclude>org.optaplanner.core.impl.testdata.domain.*</exclude>
                                    <exclude>*TestdataAbstractSolutionBasedSolution</exclude>
                                </excludes>
                                <propertyName>jacoco.agent.argLine</propertyName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
<!--                <plugin>-->
<!--                    <groupId>net.revelc.code.formatter</groupId>-->
<!--                    <artifactId>formatter-maven-plugin</artifactId>-->
<!--                    <version>2.11.0</version>-->
<!--                    <configuration>-->
<!--                        <configFile>eclipse-format.xml</configFile>-->
<!--                        <lineEnding>LF</lineEnding>-->
<!--                        <skip>${formatter.skip}</skip>-->
<!--                    </configuration>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <goals>-->
<!--                                <goal>${formatter.goal}</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                </plugin>-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxb2-maven-plugin</artifactId>
                    <version>2.5.0</version>
                    <executions>
                        <execution>
                            <id>schemagen</id>
                            <!-- Make sure the XSD will be generated after the codebase has been successfully compiled. -->
                            <phase>process-classes</phase>
                            <goals>
                                <goal>schemagen</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <clearOutputDir>false</clearOutputDir>
                        <createJavaDocAnnotations>false</createJavaDocAnnotations>
                        <generateEpisode>false</generateEpisode>
                        <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                        <transformSchemas>
                            <transformSchema>
                                <uri>https://www.optaplanner.org/xsd/solver</uri>
                                <toFile>solver.xsd</toFile>
                            </transformSchema>
                            <transformSchema>
                                <uri>https://www.optaplanner.org/xsd/benchmark</uri>
                                <toFile>${schema.filename.benchmark}</toFile>
                            </transformSchema>
                        </transformSchemas>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>net.revelc.code.formatter</groupId>-->
<!--                <artifactId>formatter-maven-plugin</artifactId>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>quickProfile</id>
            <activation>
                <property>
                    <name>quickly</name>
                </property>
            </activation>
            <properties>
                <!--        <enforcer.skip>true</enforcer.skip>-->
                <revapi.skip>true</revapi.skip>
                <skipTests>true</skipTests>
                <skipITs>true</skipITs>
                <formatter.skip>true</formatter.skip>
            </properties>
        </profile>
    </profiles>


    <distributionManagement>
        <repository>
            <id>apache-release-staging-repository</id>
            <name>Apache Release Staging Repository</name>
            <url>https://repository.apache.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
            <id>apache-snapshots-repository</id>
            <name>Apache Snapshot Repository</name>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>apache-public-repository-group</id>
            <url>https://repository.apache.org/content/groups/public/</url>
            <releases>
                <!-- Get releases only from Maven Central which is faster. -->
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>apache-public-repository-group</id>
            <name>Apache Public Repository Group</name>
            <url>https://repository.apache.org/content/groups/public/</url>
            <layout>default</layout>
            <releases>
                <!-- Only get SNAPSHOTS from Apache repository,
                     so it tries to get releases first (and only) from Maven Central. -->
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
